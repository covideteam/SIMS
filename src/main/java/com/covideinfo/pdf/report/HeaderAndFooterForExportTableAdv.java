package com.covideinfo.pdf.report;


import java.text.SimpleDateFormat;
import java.util.Date;

import com.covideinfo.model.UserMaster;
import com.itextpdf.text.Document;
import com.itextpdf.text.Element;
import com.itextpdf.text.Font;
import com.itextpdf.text.Font.FontFamily;
import com.itextpdf.text.Image;
import com.itextpdf.text.Phrase;
import com.itextpdf.text.Rectangle;
import com.itextpdf.text.pdf.ColumnText;
import com.itextpdf.text.pdf.PdfPCell;
import com.itextpdf.text.pdf.PdfPTable;
import com.itextpdf.text.pdf.PdfPageEventHelper;
import com.itextpdf.text.pdf.PdfWriter;

public class HeaderAndFooterForExportTableAdv extends PdfPageEventHelper {
	private String imgLoc;
	private UserMaster user;
	private String dateStr;
	private Font regular;
	private Font heading;
	
	public HeaderAndFooterForExportTableAdv(String imagePath,UserMaster user, String dateStr, Font regular, Font heading) {
		this.imgLoc = imagePath;
		this.user = user;
		this.dateStr = dateStr;
		this.regular = regular;
		this.heading = heading;
	}
	@Override
	public void onStartPage(PdfWriter pdfWriter, Document document) {
		try {
			//For A4 
			Image img = Image.getInstance(imgLoc);
			img.setAbsolutePosition(40, 795); 
            img.scaleAbsolute(80, 30);
            document.add(img);
            
			//For A4 Rotation
			/*Image img2 = Image.getInstance(imgLoc);
			img2.setAbsolutePosition(200, 510); 
            img2.scaleAbsolute(100, 60);*/
			
			//Legal rotate
			/*Image img = Image.getInstance(imgLoc);
			img.setAbsolutePosition(293, 530); 
            img.scaleAbsolute(100, 60);
            document.add(img);*/
            
            
            PdfPCell table_cell2 = null;
            
            PdfPTable table2 = new PdfPTable(1);
            table2.setWidthPercentage(95f);
           // Font regular = new Font(FontFamily.HELVETICA, 12);
            Font bold = new Font(FontFamily.TIMES_ROMAN, 16, Font.BOLD);
            Phrase p = new Phrase("USERS", bold);
            table_cell2= new PdfPCell(p);
            table_cell2.setBorder(Rectangle.NO_BORDER);
            table_cell2.setHorizontalAlignment(Element.ALIGN_CENTER);
            table2.addCell(table_cell2);
            document.add(table2);
             
            PdfPTable table = new PdfPTable(1);
            table.setWidthPercentage(95f);
            table_cell2 = new PdfPCell(new Phrase(""));
            table_cell2.setBorder(Rectangle.NO_BORDER);
            table_cell2.setFixedHeight(20f);
            table.addCell(table_cell2);
            document.add(table);
            
    		
    		 PdfPTable space = new PdfPTable(1);
    		 space.setWidthPercentage(95f);
             table_cell2 = new PdfPCell(new Phrase(""));
             table_cell2.setBorder(Rectangle.NO_BORDER);
             table_cell2.setFixedHeight(10f);
             space.addCell(table_cell2);
             document.add(space);
      
      	}catch (Exception e) {
			e.printStackTrace();
		}
	}
	@Override
    public void onEndPage(PdfWriter writer, Document document) {
		try {
			SimpleDateFormat sdf = new SimpleDateFormat(dateStr);
			String date = sdf.format(new Date());
			ColumnText.showTextAligned(writer.getDirectContent(), Element.ALIGN_LEFT, new Phrase("CONFIDENTIAL", regular), 40, 50, 0);
			ColumnText.showTextAligned(writer.getDirectContent(), Element.ALIGN_LEFT, new Phrase("Generated By   : "+user.getFullName()+ " at : "+date, regular), 40, 30, 0);
			//ColumnText.showTextAligned(writer.getDirectContent(), Element.ALIGN_LEFT, new Phrase("Generated Date : "+date, regular), 250, 30, 0);
			
//	       ColumnText.showTextAligned(writer.getDirectContent(), Element.ALIGN_CENTER, new Phrase("Generated Date : "+new Date(), regular), 300, 70, 0);
		}catch(Exception e) {
			e.printStackTrace();
		}	
    }
	
}


